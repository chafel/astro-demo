---
import Header from '../components/Header.astro';

import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Footer from '../components/Footer.astro';

const pageTitle = "About me"

const identity = {
  firstName: "Chaofei",
  country: "China",
  occupation: "Technical Writer",
  hobbies: ["photography", "birdwatching", "baseball"],
};

const skills = ["HTML", "CSS", "JavaScript", "React", "Astro", "Writing Docs"];

const happy = true;
const finished = false;
const goal = 3;
const skillColor = "navy";
const fontWeight = 'bold';
const textCase = 'uppercase';
---

<Layout title={pageTitle}>
	<main>

		<h3>Hello! My name is <span class="text-gradient">chaofei</span></h3>
		<p class="instructions">
			<code>Web Developer</code><br />
			I like to <strong>learn</strong> delicate things.
		</p>
        <p>Here are a few facts about me:</p>
        <ul>
        <li>My name is {identity.firstName}.</li>
        <li>I live in {identity.country} and I work as a {identity.occupation}.</li>
        {identity.hobbies.length >= 2 &&
            <li>Two of my hobbies are: {identity.hobbies[0]} and {identity.hobbies[1]}</li>
        }
        </ul>
        <p>My skills are:</p>
        <ul>
        {skills.map((skill) => <li class="skill">{skill}</li>)}
        </ul>
        <p class="instructions">I am working through Astro's introductory tutorial. This is the second page on my website, and it's the first one I built myself!</p>
        {happy && <p>I am happy to be learning Astro!</p>}

        {finished && <p>I finished this tutorial!</p>}

        {goal === 3 ? <p>My goal is to finish in 3 days.</p> : <p>My goal is not 3 days.</p>}
        <p class="instructions">This site will update as I complete more of the tutorial, so keep checking back and see how my journey is going!</p>
		<ul role="list" class="link-card-grid">
			<Card
				href="https://chaofei.tech/"
				title="My blog"
				body="I'd like to write for sharing."
			/>
		</ul>

	</main>
</Layout>

<style define:vars={{skillColor, fontWeight, textCase}}>
    h1 {
        color: purple;
        font-size: 4rem;
    }
    .skill {
        color: var(--skillColor);
        font-weight: var(--fontWeight);
        text-transform: var(--textCase);
    }
</style>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
